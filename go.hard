#!/bin/bash
if [ "x$1" == "x" ] ; then
    echo "USAGE: ./go.hard <apollo | normal> <Release | RelWithDebInfo>"
    kill -INT $$
fi
if [ "x$2" == "x" ] ; then
    echo "USAGE: ./go.hard <apollo | normal> <Release | RelWithDebInfo>"
    kill -INT $$
fi
#


exec 3>&1 4>&2
function set_output_prefix() {
    exec 1>&3 2>&4
    exec > >(sed "s/^/$1-$2 [$3] ...........: /")
    exec 2> >(sed "s/^/$1-$2 [$3] (stderr) ..: /" >&2)
}


# Compilation report tails:
#set +m
#touch intel/$2.$1.opt.RAJA.out
#touch intel/$2.$1.opt.Umpire.out
#touch intel/$2.$1.opt.SAMRAI.out
#touch intel/$2.$1.opt.cleverleaf.out
#tail -f intel/$2.$1.opt.RAJA.out > intel/$2.$1.optrpt.RAJA.out &
#let PID_OF_TAIL1=$!
#tail -f intel/$2.$1.opt.Umpire.out > intel/$2.$1.optrpt.Umpire.out &
#let PID_OF_TAIL2=$!
#tail -f intel/$2.$1.opt.SAMRAI.out > intel/$2.$1.optrpt.SAMRAI.out &
#let PID_OF_TAIL3=$!
#tail -f intel/$2.$1.opt.cleverleaf.out > intel/$2.$1.optrpt.cleverleaf.out &
#let PID_OF_TAIL4=$!
#set -m
#
set_output_prefix $1 $2 "RAJA"
echo "Checking RAJA version in local and remote repositories:"
cd RAJA
git fetch
RAJA_LOCAL=$(git rev-parse master)
RAJA_REMOTE=$(git rev-parse remotes/origin/master)
RAJA_BASE=$(git merge-base @ remotes/origin/master)
cd ..
echo "    RAJA_LOCAL   = ${RAJA_LOCAL}"
echo "    RAJA_REMOTE  = ${RAJA_REMOTE}"
echo "    RAJA_BASE    = ${RAJA_BASE}"
if [ $RAJA_LOCAL = $RAJA_REMOTE ]; then
    echo "Your RAJA is up to date!"
elif [ $RAJA_LOCAL = $RAJA_BASE ]; then
    echo "There are RAJA updates!"
    read -p "Merge the latest uodates into your copy of the RAJA submodule? [Y/n]: " -i Y -e reply
    if [ "$reply" == "Y" ]
    then
        cd RAJA
        git pull
        cd ..
    else
        echo "NOTE: You have chosen to NOT merge the available RAJA updates."
    fi
elif [ $RAJA_REMOTE = $RAJA_BASE ]; then
    echo "NOTE: You have made changes to your copy of the RAJA repo, and may need to push!"
else
    echo "NOTE: Your RAJA submodule has diverged from the origin. Doing nothing."
fi


./configure.$1 -m $2 -p package-$1 -c RAJA
cd package-$1/$2/build/RAJA
make -j install
cd ../../../../
#
set_output_prefix $1 $2 "Umpire"
./configure.$1 -m $2 -p package-$1 -c Umpire
cd package-$1/$2/build/Umpire
make -j install
cd ../../../../
#
set_output_prefix $1 $2 "SAMRAI"
./configure.$1 -m $2 -p package-$1 -c SAMRAI
cd package-$1/$2/build/SAMRAI
make -j install
cd ../../../../
#
set_output_prefix $1 $2 "cleverleaf"
./configure.$1 -m $2 -p package-$1 -c cleverleaf
cd package-$1/$2/build/cleverleaf
make -j install
cd ../../../../
#
#set +m
#kill -SIGTERM $PID_OF_TAIL1
#kill -SIGTERM $PID_OF_TAIL2
#kill -SIGTERM $PID_OF_TAIL3
#kill -SIGTERM $PID_OF_TAIL4
#set -m
exec 1>&3 2>&4
echo "== CleverLeaf './go.hard $1 $2' script is finished."
echo "== Binaries should be available in: ./package-$1/$2/install"
echo ""
